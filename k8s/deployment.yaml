apiVersion: apps/v1
kind: Deployment
metadata:
  name: appsettings-env-override
  namespace: demo
  labels:
    app: appsettings-env-override
    environment: production
    team: platform
  annotations:
    description: "Application Settings Environment Override Demo"
    maintainer: "Platform Team"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: appsettings-env-override
  template:
    metadata:
      labels:
        app: appsettings-env-override
        environment: production
        team: platform
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: appsettings-env-override
        image: ghcr.io/opscalehub/appsettingsenvoverride:main
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
        - name: "AppSettings_Foo"
          value: "BarBar"
        - name: "AppSettings_nested__Baz"
          value: "BazBaz"
        - name: "AppSettings_Production_Setting"
          value: "ExtendedProductionSetting"

---
apiVersion: v1
kind: Service
metadata:
  name: appsettings-env-override
  namespace: demo
  labels:
    app: appsettings-env-override
    environment: production
  annotations:
    description: "Service for AppSettings Environment Override Demo"
spec:
  selector:
    app: appsettings-env-override
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080
  type: ClusterIP
